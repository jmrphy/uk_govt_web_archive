cbind(wss,k)
wss
k
data.frame(wss,k)
data.frame(wss,1:15)
wss<-data.frame(wss,1:15)
wss
View(wss.1)
k<-2:15
wss <- rnorm(10)
while (prod(wss==sort(wss,decreasing=T))==0) {
wss <- (nrow(kdata)-1)*sum(apply(kdata,2,var))
for (i in k) wss[i] <- sum(kmeans(kdata, centers=i)$withinss)}
wss2<-data.frame(wss,k)
k
wss
data.frame(wss,1:k)
k<-15
data.frame(wss,1:k)
wss<-data.frame(wss,1:k)
names(wss)
names(wss)<-c("WSS", "K")
require(ggplot2)
ggplot(wss, aes(x=K, y=WSS)) + geom_line() + theme_bw()
ggplot(wss, aes(x=K, y=WSS)) + geom_line() + theme_bw()
require(psych)
install.packages("psych")
require(psych)
k.rand <- function(x){
km.rand <- matrix(sample(x),dim(x)[1],dim(x)[2])
rand.wss <- as.matrix(dim(x)[1]-1)*sum(apply(km.rand,2,var))
for (i in 2:n.lev) rand.wss[i] <- sum(kmeans(km.rand, centers=i)$withinss)
rand.wss <- as.matrix(rand.wss)
return(rand.wss)}
rand.mat <- matrix(0,n.lev,250)
k.1 <- function(x) {
for (i in 1:250) {
r.mat <- as.matrix(suppressWarnings(k.rand(kdata)))
rand.mat[,i] <- r.mat}
return(rand.mat)}
rand.mat <- k.1(kdata)
install.packages("cluster")
require(cluster)
par(ask=TRUE)
xrange <- range(1:n.lev)
yrange <- range(log(rand.mat),log(wss))
plot(xrange,yrange, type='n', xlab='Cluster Solution', ylab='Log of Within Group SSE', main='Cluster Solutions against Log of SSE')
lines(log(wss), type="b", col='blue')
legend('topright',c('Actual Data', '250 Random Runs'), col=c('blue', 'red'), lty=1)
par(ask=TRUE)
yrange <- range(rand.mat,wss)
plot(xrange,yrange, type='n', xlab="Cluster Solution", ylab="Within Groups SSE", main="Cluster Solutions against SSE")
lines(1:n.lev, wss, type="b", col='blue')
legend('topright',c('Actual Data', '250 Random Runs'), col=c('blue', 'red'), lty=1)
par(ask=TRUE)
xrange <- range(1:n.lev)
yrange <- range(log(rand.mat),log(wss))
plot(xrange,yrange, type='n', xlab='Cluster Solution', ylab='Log of Within Group SSE', main='Cluster Solutions against Log of SSE')
for (i in 1:250) lines(log(rand.mat[,i]),type='l',col='red')
lines(log(wss), type="b", col='blue')
legend('topright',c('Actual Data', '250 Random Runs'), col=c('blue', 'red'), lty=1)
par(ask=FALSE)
xrange <- range(1:n.lev)
yrange <- range(log(rand.mat),log(wss))
plot(xrange,yrange, type='n', xlab='Cluster Solution', ylab='Log of Within Group SSE', main='Cluster Solutions against Log of SSE')
load("data/globalisation_dtm.Rdata")
rowtotals <- apply(dtm, 1, sum) # find the sum of words in each document
standarddtm <- dtm/rowtotals  # Thanks to Brandon Stewart for this and the code below here http://faculty.washington.edu/jwilker/tft/Stewart.LabHandout.pdf
sampledtm<-standarddtm[sample(nrow(standarddtm),size=(dim(standarddtm)[1]/50),replace=FALSE),]
rm(dtm)
dim(sampledtm) # check, reduced
kdata<-as.matrix(sampledtm)
require(tm)
require(vegan)
require(ggplot2)
require(psych)
require(cluster)
load("data/globalisation_dtm.Rdata")
rowtotals <- apply(dtm, 1, sum) # find the sum of words in each document
standarddtm <- dtm/rowtotals  # Thanks to Brandon Stewart for this and the code below here http://faculty.washington.edu/jwilker/tft/Stewart.LabHandout.pdf
sampledtm<-standarddtm[sample(nrow(standarddtm),size=(dim(standarddtm)[1]/75),replace=FALSE),]
rm(dtm)
dim(sampledtm) # check, reduced
kdata<-as.matrix(sampledtm)
require(tm)
require(vegan)
require(ggplot2)
require(psych)
require(cluster)
load("data/globalisation_dtm.Rdata")
rowtotals <- apply(dtm, 1, sum) # find the sum of words in each document
standarddtm <- dtm/rowtotals  # Thanks to Brandon Stewart for this and the code below here http://faculty.washington.edu/jwilker/tft/Stewart.LabHandout.pdf
sampledtm<-standarddtm[sample(nrow(standarddtm),size=(dim(standarddtm)[1]/70),replace=FALSE),]
rm(dtm)
dim(sampledtm) # check, reduced
kdata<-as.matrix(sampledtm)
sampledtm<-standarddtm[sample(nrow(standarddtm),size=(dim(standarddtm)[1]/50),replace=FALSE),]
dim(sampledtm) # check, reduced
load("data/globalisation_dtm.Rdata")
rowtotals <- apply(dtm, 1, sum) # find the sum of words in each document
standarddtm <- dtm/rowtotals  # Thanks to Brandon Stewart for this and the code below here http://faculty.washington.edu/jwilker/tft/Stewart.LabHandout.pdf
sampledtm<-standarddtm[sample(nrow(standarddtm),size=(dim(standarddtm)[1]/70),replace=FALSE),]
rm(dtm)
dim(sampledtm) # check, reduced
kdata<-as.matrix(sampledtm)
n.lev<-20
wss <- rnorm(10)
while (prod(wss==sort(wss,decreasing=T))==0) {
wss <- (nrow(kdata)-1)*sum(apply(kdata,2,var))
for (i in 2:n.lev) wss[i] <- sum(kmeans(kdata, centers=i)$withinss)}
n.lev<-15
wss <- rnorm(10)
while (prod(wss==sort(wss,decreasing=T))==0) {
wss <- (nrow(kdata)-1)*sum(apply(kdata,2,var))
for (i in 2:n.lev) wss[i] <- sum(kmeans(kdata, centers=i)$withinss)}
wss
set.seed(666)
n.lev<-15
wss <- rnorm(10)
while (prod(wss==sort(wss,decreasing=T))==0) {
wss <- (nrow(kdata)-1)*sum(apply(kdata,2,var))
for (i in n.lev) wss[i] <- sum(kmeans(kdata, centers=i)$withinss)}
set.seed(666)
n.lev<-15
wss <- rnorm(10)
while (prod(wss==sort(wss,decreasing=T))==0) {
wss <- (nrow(kdata)-1)*sum(apply(kdata,2,var))
for (i in 2:n.lev) wss[i] <- sum(kmeans(kdata, centers=i)$withinss)}
wss.df<-data.frame(wss,1:n.lev)
names(wss.df)<-c("WSS", "K")
ggplot(wss.df, aes(x=K, y=WSS)) + geom_line() + theme_bw()
k.rand <- function(x){
km.rand <- matrix(sample(x),dim(x)[1],dim(x)[2])
rand.wss <- as.matrix(dim(x)[1]-1)*sum(apply(km.rand,2,var))
for (i in 2:n.lev) rand.wss[i] <- sum(kmeans(km.rand, centers=i)$withinss)
rand.wss <- as.matrix(rand.wss)
return(rand.wss)}
rand.mat <- matrix(0,n.lev,250)
k.1 <- function(x) {
for (i in 1:250) {
r.mat <- as.matrix(suppressWarnings(k.rand(kdata)))
rand.mat[,i] <- r.mat}
return(rand.mat)}
rand.mat <- k.1(kdata)
xrange <- range(1:n.lev)
yrange <- range(log(rand.mat),log(wss))
plot(xrange,yrange, type='n', xlab='Cluster Solution', ylab='Log of Within Group SSE', main='Cluster Solutions against Log of SSE')
for (i in 1:250) lines(log(rand.mat[,i]),type='l',col='red')
lines(log(wss), type="b", col='blue')
legend('topright',c('Actual Data', '250 Random Runs'), col=c('blue', 'red'), lty=1)
legend('bottomleft',c('Actual Data', '250 Random Runs'), col=c('blue', 'red'), lty=1)
par(ask=FALSE)
plot(xrange,yrange, type='n', xlab='Cluster Solution', ylab='Log of Within Group SSE', main='Cluster Solutions against Log of SSE')
for (i in 1:250) lines(log(rand.mat[,i]),type='l',col='red')
lines(log(wss), type="b", col='blue')
legend('bottomleft',c('Actual Data', '250 Random Runs'), col=c('blue', 'red'), lty=1)
par(ask=FALSE)
yrange <- range(rand.mat,wss)
plot(xrange,yrange, type='n', xlab="Cluster Solution", ylab="Within Groups SSE", main="Cluster Solutions against SSE")
for (i in 1:250) lines(rand.mat[,i],type='l',col='red')
lines(1:n.lev, wss, type="b", col='blue')
legend('bottomleft',c('Actual Data', '250 Random Runs'), col=c('blue', 'red'), lty=1)
r.sse <- matrix(0,dim(rand.mat)[1],dim(rand.mat)[2])
wss.1 <- as.matrix(wss)
for (i in 1:dim(r.sse)[2]) {
r.temp <- abs(rand.mat[,i]-wss.1[,1])
r.sse[,i] <- r.temp}
r.sse.m <- apply(r.sse,1,mean)
r.sse.sd <- apply(r.sse,1,sd)
r.sse.plus <- r.sse.m + r.sse.sd
r.sse.min <- r.sse.m - r.sse.sd
par(ask=FALSE)
xrange <- range(1:n.lev)
yrange <- range(log(r.sse.plus),log(r.sse.min))
plot(xrange,yrange, type='n',xlab='Cluster Solution', ylab='Log of SSE - Random SSE', main='Cluster Solustions against (Log of SSE - Random SSE)')
lines(log(r.sse.m), type="b", col='blue')
lines(log(r.sse.plus), type='l', col='red')
lines(log(r.sse.min), type='l', col='red')
legend('topright',c('SSE - random SSE', 'SD of SSE-random SSE'), col=c('blue', 'red'), lty=1)
par(ask=TRUE)
xrange <- range(1:n.lev)
yrange <- range(r.sse.plus,r.sse.min)
plot(xrange,yrange, type='n',xlab='Cluster Solution', ylab='SSE - Random SSE', main='Cluster Solutions against (SSE - Random SSE)')
lines(r.sse.plus, type='l', col='red')
lines(r.sse.min, type='l', col='red')
legend('topright',c('SSE - random SSE', 'SD of SSE-random SSE'), col=c('blue', 'red'), lty=1)
par(ask=FALSE)
xrange <- range(1:n.lev)
yrange <- range(log(r.sse.plus),log(r.sse.min))
plot(xrange,yrange, type='n',xlab='Cluster Solution', ylab='Log of SSE - Random SSE', main='Cluster Solustions against (Log of SSE - Random SSE)')
lines(log(r.sse.m), type="b", col='blue')
lines(log(r.sse.plus), type='l', col='red')
lines(log(r.sse.min), type='l', col='red')
legend('topright',c('SSE - random SSE', 'SD of SSE-random SSE'), col=c('blue', 'red'), lty=1)
par(ask=FALSE)
xrange <- range(1:n.lev)
yrange <- range(log(r.sse.plus),log(r.sse.min))
plot(xrange,yrange, type='n',xlab='Cluster Solution', ylab='Log of SSE - Random SSE', main='Cluster Solustions against (Log of SSE - Random SSE)')
lines(log(r.sse.m), type="b", col='blue')
lines(log(r.sse.plus), type='l', col='red')
lines(log(r.sse.min), type='l', col='red')
legend('bottomright',c('SSE - random SSE', 'SD of SSE-random SSE'), col=c('blue', 'red'), lty=1)
par(ask=TRUE)
xrange <- range(1:n.lev)
yrange <- range(r.sse.plus,r.sse.min)
plot(xrange,yrange, type='n',xlab='Cluster Solution', ylab='SSE - Random SSE', main='Cluster Solutions against (SSE - Random SSE)')
lines(r.sse.plus, type='l', col='red')
lines(r.sse.min, type='l', col='red')
legend('topright',c('SSE - random SSE', 'SD of SSE-random SSE'), col=c('blue', 'red'), lty=1)
xrange <- range(1:n.lev)
yrange <- range(r.sse.plus,r.sse.min)
plot(xrange,yrange, type='n',xlab='Cluster Solution', ylab='SSE - Random SSE', main='Cluster Solutions against (SSE - Random SSE)')
lines(r.sse.plus, type='l', col='red')
lines(r.sse.min, type='l', col='red')
legend('bottomright',c('SSE - random SSE', 'SD of SSE-random SSE'), col=c('blue', 'red'), lty=1)
wss.df<-data.frame(wss,1:n.lev)
names(wss.df)<-c("WSS", "K")
ggplot(wss.df, aes(x=K, y=WSS)) + geom_line() + theme_bw()
ggplot(wss.df, aes(x=K, y=WSS)) +
geom_line() +
theme_bw() +
labs(x="Within Sum of Squares", y="Clusters (k)", title="Within Sum of Squares by Number of Clusters")
ggplot(wss.df, aes(x=K, y=WSS)) +
geom_line() +
theme_bw() +
labs(y="Within Sum of Squares", x="Clusters (k)", title="Within Sum of Squares by Number of Clusters")
xrange <- range(1:n.lev)
yrange <- range(log(rand.mat),log(wss))
plot(xrange,yrange, type='n', xlab='Cluster Solution', ylab='Log of Within Group SSE', main='Cluster Solutions against Log of SSE')
for (i in 1:250) lines(log(rand.mat[,i]),type='l',col='red')
lines(log(wss), type="b", col='blue')
legend('bottomleft',c('Actual Data', '250 Random Runs'), col=c('blue', 'red'), lty=1)
par(ask=FALSE)
yrange <- range(rand.mat,wss)
plot(xrange,yrange, type='n', xlab="Cluster Solution", ylab="Within Groups SSE", main="Cluster Solutions against SSE")
for (i in 1:250) lines(rand.mat[,i],type='l',col='red')
lines(1:n.lev, wss, type="b", col='blue')
legend('bottomleft',c('Actual Data', '250 Random Runs'), col=c('blue', 'red'), lty=1)
r.sse <- matrix(0,dim(rand.mat)[1],dim(rand.mat)[2])
wss.1 <- as.matrix(wss)
for (i in 1:dim(r.sse)[2]) {
r.temp <- abs(rand.mat[,i]-wss.1[,1])
r.sse[,i] <- r.temp}
r.sse.m <- apply(r.sse,1,mean)
r.sse.sd <- apply(r.sse,1,sd)
r.sse.plus <- r.sse.m + r.sse.sd
r.sse.min <- r.sse.m - r.sse.sd
par(ask=FALSE)
xrange <- range(1:n.lev)
yrange <- range(log(r.sse.plus),log(r.sse.min))
plot(xrange,yrange, type='n',xlab='Cluster Solution', ylab='Log of SSE - Random SSE', main='Cluster Solustions against (Log of SSE - Random SSE)')
lines(log(r.sse.m), type="b", col='blue')
lines(log(r.sse.plus), type='l', col='red')
lines(log(r.sse.min), type='l', col='red')
legend('bottomright',c('SSE - random SSE', 'SD of SSE-random SSE'), col=c('blue', 'red'), lty=1)
par(ask=TRUE)
xrange <- range(1:n.lev)
yrange <- range(r.sse.plus,r.sse.min)
plot(xrange,yrange, type='n',xlab='Cluster Solution', ylab='SSE - Random SSE', main='Cluster Solutions against (SSE - Random SSE)')
lines(r.sse.plus, type='l', col='red')
lines(r.sse.min, type='l', col='red')
legend('bottomright',c('SSE - random SSE', 'SD of SSE-random SSE'), col=c('blue', 'red'), lty=1)
par(ask=FALSE)
xrange <- range(1:n.lev)
yrange <- range(log(r.sse.plus),log(r.sse.min))
plot(xrange,yrange, type='n',xlab='Cluster Solution', ylab='Log of SSE - Random SSE', main='Cluster Solustions against (Log of SSE - Random SSE)')
lines(log(r.sse.m), type="b", col='blue')
lines(log(r.sse.plus), type='l', col='red')
lines(log(r.sse.min), type='l', col='red')
legend('bottomright',c('SSE - random SSE', 'SD of SSE-random SSE'), col=c('blue', 'red'), lty=1)
data.frame(r.sse.m, r.sse.plus)
xrange
yrange
data.frame(r.sse.m, r.sse.plus, r.sse.min, 1:n.lev)
data.frame(1:n.lev, r.sse.m, r.sse.plus, r.sse.min)
sse<-data.frame(1:n.lev, r.sse.m, r.sse.plus, r.sse.min)
require(reshape2)
sse
sse<-names("K")
sse
K<-1:n.lev
sse<-data.frame(K, r.sse.m, r.sse.plus, r.sse.min)
sse
melt(see, id=K)
melt(sse, id=K)
melt(sse, id="K")
see<-melt(sse, id="K")
sse<-melt(sse, id="K")
ggplot(sse, aes(x=K, y=value)) + geom_line()
ggplot(sse, aes(x=K, y=value)) + geom_line(colour=variable)
ggplot(sse, aes(x=K, y=value)) + geom_line(colour="variable")
ggplot(sse, aes(x=K, y=variable)) + geom_line()
ggplot(sse, aes(x=K)) + geom_line(aes(y=value))
ggplot(sse, aes(x=K, y=value, colour=variable)) + geom_line()
sse<-data.frame(K, r.sse.m)
sse<-melt(sse, id="K")
ggplot(sse, aes(x=K, y=value, colour=variable)) + geom_line()
sse<-data.frame(K, r.sse.m, r.sse.min, r.sse.plus)
sse<-melt(sse, id="K")
ggplot(sse, aes(x=K, y=value)) +
geom_line(variable=r.sse.m) +
theme_bw() +
labs(y="Diff
ggplot(sse, aes(x=K, y=value)) +
geom_line(variable=r.sse.m) +
theme_bw() +
labs(y="Difference in Absolute", x="Clusters (k)", title="Within Sum of Squares by Number of Clusters")
ggplot(sse, aes(x=K)) +
geom_line(aes(y=r.sse.m)) +
theme_bw() +
labs(y="Difference in Absolute", x="Clusters (k)", title="Within Sum of Squares by Number of Clusters")
ggplot(sse, aes(x=K)) +
geom_line(aes(x=K, y=r.sse.m)) +
theme_bw() +
labs(y="Difference in Absolute", x="Clusters (k)", title="Within Sum of Squares by Number of Clusters")
ggplot(sse, aes(x=K)) +
geom_line(aes(x=K, y=value)) +
theme_bw() +
labs(y="Difference in Absolute", x="Clusters (k)", title="Within Sum of Squares by Number of Clusters")
?geom_line
sse<-data.frame(K, r.sse.m)
sse<-melt(sse, id="K")
ggplot(sse, aes(x=K, y=value)) +
geom_line() +
theme_bw() +
labs(y="Difference in Absolute", x="Clusters (k)", title="Within Sum of Squares by Number of Clusters")
sse<-data.frame(K, r.sse.m, r.sse.plus, r.sse.min)
sse<-melt(sse, id="K")
ggplot(sse, aes(x=K, y=value, group=variable)) +
geom_line() +
theme_bw() +
labs(y="Difference in Absolute", x="Clusters (k)", title="Within Sum of Squares by Number of Clusters")
ggplot(sse, aes(x=K, y=value, group=variable)) +
geom_line() +
theme_bw() +
labs(y="Difference in Absolute", x="Clusters (k)", title="Within Sum of Squares by Number of Clusters") +
scale_color_manual(values=c("#CC6666", "#9999CC", #CC6666))
sse<-data.frame(K, r.sse.m, r.sse.plus, r.sse.min)
sse<-melt(sse, id="K")
ggplot(sse, aes(x=K, y=value, colour=variable)) +
geom_line() +
theme_bw() +
labs(y="Difference in Absolute", x="Clusters (k)", title="Within Sum of Squares by Number of Clusters") +
scale_color_manual(values=c("#CC6666", "#9999CC", #CC6666))
sse<-data.frame(K, r.sse.m, r.sse.plus, r.sse.min)
sse<-melt(sse, id="K")
sse<-data.frame(K, r.sse.m, r.sse.plus, r.sse.min)
sse<-melt(sse, id="K")
ggplot(sse, aes(x=K, y=value, colour=variable)) +
geom_line() +
theme_bw() +
labs(y="Difference in Absolute", x="Clusters (k)", title="Within Sum of Squares by Number of Clusters") +
scale_color_manual(values=c("#CC6666", "#9999CC", #CC6666))
ggplot(sse, aes(x=K, y=value, colour=variable)) +
geom_line() +
theme_bw() +
labs(y="Difference in Absolute", x="Clusters (k)", title="Within Sum of Squares by Number of Clusters") +
scale_color_manual(values=c("#CC6666", "#9999CC", "#CC6666"))
sse<-data.frame(K, r.sse.plus, r.sse.m, r.sse.min)
sse<-melt(sse, id="K")
ggplot(sse, aes(x=K, y=value, colour=variable)) +
geom_line() +
theme_bw() +
labs(y="Difference in Absolute", x="Clusters (k)", title="Within Sum of Squares by Number of Clusters") +
scale_color_manual(values=c("#CC6666", "#9999CC", "#CC6666"))
sse<-data.frame(K, r.sse.plus, r.sse.m, r.sse.min)
sse<-melt(sse, id="K")
ggplot(sse, aes(x=K, y=value, colour=variable)) +
geom_line() +
theme_bw() +
labs(y="Absolute Difference of SSE Between Random and Actual Data", x="Clusters (k)", title="Difference of Error Between Random and Actual Data by K") +
scale_color_manual(values=c("#CC6666", "#9999CC", "#CC6666"))
?legend
sse<-data.frame(K, r.sse.plus, r.sse.m, r.sse.min)
sse<-melt(sse, id="K")
ggplot(sse, aes(x=K, y=value, colour=variable)) +
geom_line() +
theme_bw() +
labs(y="Absolute Difference of SSE Between Random and Actual Data", x="Clusters (k)", title="Difference of Error Between Random and Actual Data by K") +
scale_color_manual(values=c("#CC6666", "#9999CC", "#CC6666"))
save(wss, "data/k_clusters.Rdata")
save(wss, file="data/k_clusters.Rdata")
save(wss, kdata, file="data/k_clusters.Rdata")
load("~/Dropbox/gh_projects/uk_govt_web_archive/data/k_clusters.Rdata")
load("~/Dropbox/gh_projects/uk_govt_web_archive/data/globalisation_dtm.Rdata")
options(scipen=999)
hist(apply(dtm, 1, sum), xlab="Number of Terms in Term-Document Matrix",
main="Number of Terms Per Paper in Participant Articles Corpus", breaks=100)
apply(dtm, 1, sum)
qplot(apply(dtm, 1, sum)) + geom_hist()
qplot(apply(dtm, 1, sum)) + geom_bar()
max(apply(dtm, 1, sum)
)
qplot(apply(dtm, 1, sum), binwidth=100) +
geom_bar() +
theme_bw() +
labs(x="Count", y="Number of Terms in Document", title="The Distribution of Document Lengths")
ggplot(hist, aes(x=hist[,1])) + geom_histogram() + theme_bw() + labs(title="Distribution of document lengths", x="Number of terms in document", y="Count of documents")
hist<-as.data.frame(apply(dtm, 1, sum))
ggplot(hist, aes(x=hist[,1])) + geom_histogram() + theme_bw() + labs(title="Distribution of document lengths", x="Number of terms in document", y="Count of documents")
K<-1:n.lev
wss.df<-data.frame(wss,1:n.lev)
names(wss.df)<-c("WSS", "K")
ggplot(wss.df, aes(x=K, y=WSS)) +
geom_line() +
theme_bw() +
labs(y="Within Sum of Squares", x="Clusters (k)", title="Within Sum of Squares by Number of Clusters")
wss.plot<-ggplot(wss.df, aes(x=K, y=WSS)) +
geom_line() +
theme_bw() +
labs(y="Within Sum of Squares", x="Clusters (k)", title="Within Sum of Squares by Number of Clusters")
sse.plot<-ggplot(sse, aes(x=K, y=value, colour=variable)) +
geom_line() +
theme_bw() +
labs(y="Absolute Difference of SSE Between Random and Actual Data", x="Clusters (k)", title="Difference of Error Between Random and Actual Data by K") +
scale_color_manual(values=c("#CC6666", "#9999CC", "#CC6666"))
ccas <- cascadeKM(decostand(kdata, "hell"), 2, 15)
par()
xrange <- range(1:n.lev)
yrange <- range(log(rand.mat),log(wss))
plot(xrange,yrange, type='n', xlab='Cluster Solution', ylab='Log of Within Group SSE', main='Cluster Solutions against Log of SSE')
for (i in 1:250) lines(log(rand.mat[,i]),type='l',col='red')
lines(log(wss), type="b", col='blue')
legend('bottomleft',c('Actual Data', '250 Random Runs'), col=c('blue', 'red'), lty=1)
par(ask=FALSE)
yrange <- range(rand.mat,wss)
plot(xrange,yrange, type='n', xlab="Cluster Solution", ylab="Within Groups SSE", main="Cluster Solutions against SSE")
for (i in 1:250) lines(rand.mat[,i],type='l',col='red')
lines(1:n.lev, wss, type="b", col='blue')
legend('bottomleft',c('Actual Data', '250 Random Runs'), col=c('blue', 'red'), lty=1)
par()
xrange <- range(1:n.lev)
yrange <- range(log(rand.mat),log(wss))
plot(xrange,yrange, type='n', xlab='Cluster Solution', ylab='Log of Within Group SSE', main='Cluster Solutions against Log of SSE')
for (i in 1:250) lines(log(rand.mat[,i]),type='l',col='red')
lines(log(wss), type="b", col='blue')
legend('bottomleft',c('Actual Data', '250 Random Runs'), col=c('blue', 'red'), lty=1)
par(ask=FALSE)
yrange <- range(rand.mat,wss)
plot(xrange,yrange, type='n', xlab="Cluster Solution", ylab="Within Groups SSE", main="Cluster Solutions against SSE")
for (i in 1:250) lines(rand.mat[,i],type='l',col='red')
lines(1:n.lev, wss, type="b", col='blue')
legend('bottomleft',c('Actual Data', '250 Random Runs'), col=c('blue', 'red'), lty=1)
assocs<-as.data.frame(findAssocs(dtm, 'globalis', 0.75))
assocs
findAssocs(dtm, 'globalis', 0.75)
findAssocs(dtm, 'globalis', 0.5)
load("data/globalisation_dtm.Rdata")
findAssocs(dtm, 'globalis', 0.5)
findAssocs(dtm, 'globalisation', 0.5)
findAssocs(dtm, 'globalis', 0.2)
findFreqTerms(dtm, 500000)
findAssocs(dtm, 'globalis', 0.50)
findAssocs(dtm, 'unemploy', 0.50)
findAssocs(dtm, 'employ', 0.50)
findAssocs(dtm, 'wage', 0.50)
findAssocs(dtm, 'inflat', 0.50)
findAssocs(dtm, 'inflat', 0.20)
findAssocs(dtm, 'inflation', 0.20)
findAssocs(dtm, 'wage', 0.20)
findAssocs(dtm, 'glob', 0.40)
findAssocs(dtm, 'global', 0.40)
findAssocs(dtm, 'globalis', 0.40)
require(gridExtra)
grid.arrange(wss.plot, sse.plot)
?grid.arrange
grid.arrange(wss.plot, sse.plot, as.table=TRUE)
sse.plot<-ggplot(sse, aes(x=K, y=value, colour=variable)) +
geom_line() +
theme_bw() +
labs(y="Absolute Difference of SSE Between Random and Actual Data", x="Clusters (k)", title="Difference of Error Between Random and Actual Data by K") +
scale_color_manual(values=c("#CC6666", "#9999CC", "#CC6666")) +
opts(legend.position = "none")
sse.plot<-ggplot(sse, aes(x=K, y=value, colour=variable)) +
geom_line() +
theme_bw(legend.position = "none") +
labs(y="Absolute Difference of SSE Between Random and Actual Data", x="Clusters (k)", title="Difference of Error Between Random and Actual Data by K") +
scale_color_manual(values=c("#CC6666", "#9999CC", "#CC6666"))
sse.plot<-ggplot(sse, aes(x=K, y=value, colour=variable)) +
geom_line() +
theme_bw() +
theme(legend.position = "none") +
labs(y="Absolute Difference of SSE Between Random and Actual Data", x="Clusters (k)", title="Difference of Error Between Random and Actual Data by K") +
scale_color_manual(values=c("#CC6666", "#9999CC", "#CC6666"))
grid.arrange(wss.plot, sse.plot, as.table=TRUE)
sse.plot<-ggplot(sse, aes(x=K, y=value, colour=variable)) +
geom_line() +
theme_bw() +
theme(legend.position = "none") +
labs(y="Absolute Difference of Sum of Squared Error", x="Clusters (k)", title="Difference of Error Between Random and Actual Data by K") +
scale_color_manual(values=c("#CC6666", "#9999CC", "#CC6666"))
sse.plot<-ggplot(sse, aes(x=K, y=value, colour=variable)) +
geom_line() +
theme_bw() +
theme(legend.position = "none") +
labs(y="Absolute Difference of Sum of Squared Error", x="Clusters (k)", title="Difference of Error Between Random and Actual Data by K") +
scale_color_manual(values=c("#000000","#CC6666", "#000000"))
grid.arrange(wss.plot, sse.plot, as.table=TRUE)
save(wss, kdata, rand.mat, file="data/k_clusters.Rdata")
grid.arrange(wss.plot, sse.plot, as.table=TRUE)
grid.arrange(wss.plot, sse.plot, as.table=FALSE)
grid.arrange(wss.plot, sse.plot)
source("analyses/cluster_diagnose_k.R")
assocs<-as.data.frame(findAssocs(dtm, 'global', 0.5))
require(pander)
assocs<-data.frame(row.names(assocs), assocs$globalis)
assocs<-data.frame(row.names(assocs), assocs$global)
names(assocs)<-c("Terms","Global")
pander(assocs)
source(analyses/cluster_diagnose_k.R)
ggplot(hist, aes(x=hist[,1])) + geom_histogram() + theme_bw() +
source('~/.active-rstudio-document', echo=TRUE)
